# -*- coding: utf-8 -*-

from django.shortcuts import render
from django.http import HttpResponse
from django.core.paginator import Paginator


# Views for Students

def students_list(request):
	students = (
		{'id': 1,
		 'first_name': u'Віталій',
		 'last_name': u'Подоба',
		 'ticket': 2123,	
		 'image': 'img/podoba.png'},
		{'id': 2,
		 'first_name': u'Денис',
		 'last_name': u'Баланчук',
		 'ticket': 254,	
		 'image': 'img/balanchuk.jpg'},
		{'id': 3,
		 'first_name': u'Денис',
		 'last_name': u'Борисов',
		 'ticket': 2,	
		 'image': 'img/borisov.jpg'},
		   )
	return render(request, 'students/students_list.html', {'students': students})

def listing(request):
    contact_list = ['students_add', 'students_edit', 'students_delete']
    paginator = Paginator(contact_list, 3) # Show 25 contacts per page

    page = request.GET.get('page')
    try:
        contacts = paginator.page(page)
    except PageNotAnInteger:
        # If page is not an integer, deliver first page.
        contacts = paginator.page(1)
    except EmptyPage:
        # If page is out of range (e.g. 9999), deliver last page of results.
        contacts = paginator.page(paginator.num_pages)

    return render_to_response('students/students_list.html', {"contacts": contacts})

def students_add(request):
	return HttpResponse('<h1>Students Add Form</h1>')

def students_edit(request, sid):
	return HttpResponse('<h1>Edit Student %s</h1>' % sid)

def students_delete(request, sid):
	return HttpResponse('<h1>Delete Student %s</h1>' % sid)

